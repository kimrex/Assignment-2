#include <iostream>
#include <iomanip?

using namespace std;
int main()
{
//Given constants
const int MAX_ARRAY_SIZE = 18;
const int MIN_ARRAY_SIZE = 8;
const int MAX_PIECES = 72; 
const int NOPLAYER = 0;
const int WHITEWINS = 1;
const int REDWINS = 2;
const int NOONEWINS = 0;
const int WHITESOLDIER = 1;
const int WHITEMULE = 2;
const int WHITEKING = 3;
const int REDSOLDIER = 4;
const int REDMULE = 5;
const int REDKING = 6;
const int WHITEPLAYER = 1;
const int REDPLAYER = 2;

//prompt for board size

//for loop for all of this, i++
//if board is more than 18

cerr << "ERROR: Board size too large.";
continue;

//else if board less than 8

cerr << "ERROR: Board size too small.";
continue;

//else if board inputed is odd, %2 = 1

cerr << "ERROR: Board size odd.";
continue;

//else if board is not an integer

cerr << "ERROR: Board size is not an integer.";
continue;

//else if i == 3
 
 cerr << "ERROR: Too many errors entering the size of the board.";
 return 1;

//else

break;




}
//initializing given functions
void InitializeBoard(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE],

  int numRowsInBoard);

void DisplayBoard(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE], 

  int numRowsInBoard);

int CountJumps(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE], 

  int numRowsInBoard, int player, int xLocArray[], int yLocArray[]);

bool CheckList(int inArray1[], int inArray2[], int xIndex, int yIndex);

int CountMove1Squares(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE],

  int numRowsInBoard, int player, int xLocArray[],  int yLocArray[]);

bool IsMove1Square(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE], 

  int numRowsInBoard, int player, int xLoc, int yLoc); 

bool IsJump(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE], 

  int numRowsInBoard, int player, int xLoc, int yLoc); 

bool MakeMove(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE], 

  int numRowsInBoard, int player, int fromSquareNum, 

  int toSquareNum, bool &jumped);

bool CheckWin(int CMCheckersBoard[MAX_ARRAY_SIZE][MAX_ARRAY_SIZE], int numRowsInBoard);







